
NewVM instruction set

This table defines the instruction set of newvm
  each instruction has an opcode and arguments
  each instruction is 8 bytes

instructions are added to the table as I come up with them, they might therefore not be in any logical order, sorry.

sizes of different things:
  opcode: 1 byte
  reg: 1 byte (4 bits selector, 4 bits index)
  byte: 1 byte
  dword: 4 bytes
  int: 4 bytes

opcode	instruction	arguments	description
1	mv		reg, reg	copy value from one register to another
2	ldb		reg, byte	load byte into register
3	lddw		reg, dword	load dword into register
4	ldi		reg, int	load int into register
5	cl		reg  		clear register

6	jmpd		dword		jump to address
7	jmpr		reg		jump to address specified by register
8	calld		dword		call address
9	callr		reg		call address specified by register
10	int		byte		call interupt
11	cjmpd		bool,bool,dword	conditional jump to address
12	cjmpr		bool,bool,reg	conditional jump to reg address

13	pushr		reg		push value of register to stack
14	pushb		byte		push byte to stack
15	pushdw		dword		push dword to stack
16	pushi		int		push int to stack

17	popb		reg		pop byte from stack to register
18	popdw		reg		pop dword from stack to register
19	popi		reg		pop int from stack to register

20	outb		byte,byte	send byte to port
21	outbr		byte,reg	send byte from reg to port
22	outdw		byte,dword	send dword to port
23	outdwr		byte,reg	send dword from reg to port
24	outi		byte,int	send int to port
25	outir		byte,reg	send int from reg to port

26	inb		byte,reg	get byte from port to reg
27	indw		byte,reg	get dword from port to reg
28	ini		byte,reg	get int from port to reg

29	add		reg,reg		add reg b to reg a
30	sub		reg,reg		subtract reg b from reg a
31	mul		reg,reg		multiply reg b with reg a
32	div		reg,reg		divide reg a over reg b
33	mod		reg,reg		modulo reg a over reg b

34	cmp		reg,reg		compare two registers
35	ret				return to last caller

36	mwb		reg,byte	write byte to address of register
37	mwdw		reg,dword	same as above but with dword
38	mwi		reg,int		same with int
39	mwbr		reg,reg		same with register value
40	mwdwr		reg,reg		"
41	mwir		reg,reg		"

42	mrb		reg,reg		read byte from memory to register
43	mrdw		reg,reg		"
44	mri		reg,reg		"